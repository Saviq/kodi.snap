parts:
  '2048':
    build-packages:
    - curl
    cmake-generator: Unix Makefiles
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    override-pull: '

      craftctl default

      curl -o ${CRAFT_PART_SRC}/CMakeLists.txt https://raw.githubusercontent.com/kodi-game/game.libretro.2048/master/depends/common/2048/CMakeLists.txt

      '
    plugin: cmake
    source: https://github.com/libretro/libretro-2048/archive/5474ed1ab880b3296c9860d0943d7de1970c79dd.tar.gz
  audiodecoder.2sf:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: &id001
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.2sf.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.asap:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.asap.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.gme:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.gme.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.gsf:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.gsf.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.hvl:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.hvl.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.ncsf:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.ncsf.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.nosefart:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.nosefart.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - libopenmpt-dev
    stage-packages:
    - libopenmpt0t64
  audiodecoder.openmpt:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.openmpt.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.organya:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.organya.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.qsf:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.qsf.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.sacd:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.sacd.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - libwavpack-dev
  audiodecoder.sidplay:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.sidplay.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - libresid-builder-dev
    - libsidutils-dev
    - libsidplay2-dev
    stage-packages:
    - libresid-builder0c2a
    - libsidplay2
    prime:
    - -usr/lib/libhardsid-builder.so*
  audiodecoder.snesapu:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.snesapu.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.ssf:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.ssf.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.stsound:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.stsound.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.timidity:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.timidity.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.upse:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.upse.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.usf:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.usf.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.vgmstream:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.vgmstream.git
    source-branch: Omega
    source-depth: 1
  audiodecoder.wsr:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audiodecoder.wsr.git
    source-branch: Omega
    source-depth: 1
  audioencoder.flac:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audioencoder.flac.git
    source-branch: Omega
    source-depth: 1
  audioencoder.lame:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audioencoder.lame.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - libmp3lame-dev
    stage-packages:
    - libmp3lame0
  audioencoder.vorbis:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audioencoder.vorbis.git
    source-branch: Omega
    source-depth: 1
  audioencoder.wav:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/audioencoder.wav.git
    source-branch: Omega
    source-depth: 1
  bento4:
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    - -DBUILD_APPS=OFF
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/Bento4/archive/refs/tags/1.6.0-641-3-Omega.tar.gz
    source-checksum: sha256/a9b231b63159b3a4d9e47c5328b476308852bf092ccb9ce98f7cf46a386465ce
    build-environment:
    - CXXFLAGS: -fPIC
  game.libretro:
    after:
    - kodi
    - rcheevos
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    - -DRCHEEVOS_LIBRARY=${CRAFT_STAGE}/usr/lib/librcheevoslib.a
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-game/game.libretro.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - retroarch-dev
    build-environment:
    - INCLUDE: ${CRAFT_STAGE}/usr/include
  game.libretro.2048:
    after:
    - kodi
    - '2048'
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-game/game.libretro.2048.git
    source-branch: master
    source-depth: 1
    build-environment:
    - LIB: ${CRAFT_STAGE}/usr/lib
  game.libretro.mrboom:
    after:
    - kodi
    - mrboom
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-game/game.libretro.mrboom.git
    source-branch: master
    source-depth: 1
    build-environment:
    - LIB: ${CRAFT_STAGE}/usr/lib
  gpu-2404:
    after:
    - kodi
    - kodi
    - audiodecoder.2sf
    - audiodecoder.asap
    - audiodecoder.gme
    - audiodecoder.gsf
    - audiodecoder.hvl
    - audiodecoder.ncsf
    - audiodecoder.nosefart
    - audiodecoder.openmpt
    - audiodecoder.organya
    - audiodecoder.qsf
    - audiodecoder.sacd
    - audiodecoder.sidplay
    - audiodecoder.snesapu
    - audiodecoder.ssf
    - audiodecoder.stsound
    - audiodecoder.timidity
    - audiodecoder.upse
    - audiodecoder.usf
    - audiodecoder.vgmstream
    - audiodecoder.wsr
    - audioencoder.flac
    - audioencoder.lame
    - audioencoder.vorbis
    - audioencoder.wav
    - rcheevos
    - game.libretro
    - '2048'
    - game.libretro.2048
    - mrboom
    - game.libretro.mrboom
    - imagedecoder.heif
    - imagedecoder.mpo
    - imagedecoder.raw
    - bento4
    - inputstream.adaptive
    - inputstream.ffmpegdirect
    - inputstream.rtmp
    - peripheral.joystick
    - peripheral.xarcade
    - pvr.argustv
    - pvr.demo
    - pvr.dvblink
    - pvr.dvbviewer
    - pvr.filmon
    - pvr.freebox
    - pvr.hdhomerun
    - pvr.hts
    - pvr.iptvsimple
    - pvr.mediaportal.tvserver
    - pvr.mythtv
    - pvr.nextpvr
    - pvr.njoy
    - pvr.octonet
    - pvr.pctv
    - pvr.plutotv
    - pvr.sledovanitv.cz
    - pvr.stalker
    - pvr.teleboy
    - pvr.vbox
    - pvr.vdr.vnsi
    - pvr.vuplus
    - pvr.waipu
    - pvr.wmc
    - pvr.zattoo
    - screensaver.asteroids
    - screensaver.asterwave
    - screensaver.biogenesis
    - screensaver.cpblobs
    - screensaver.greynetic
    - screensaver.matrixtrails
    - screensaver.pingpong
    - screensaver.pyro
    - screensaver.shadertoy
    - screensaver.stars
    - screensavers.rsxs
    - vfs.libarchive
    - vfs.rar
    - vfs.sftp
    - visualization.fishbmc
    - visualization.goom
    - visualization.matrix
    - visualization.pictureit
    - projectm
    - visualization.projectm
    - visualization.shadertoy
    - visualization.spectrum
    - visualization.starburst
    - visualization.waveform
    source: https://github.com/canonical/gpu-snap.git
    plugin: dump
    override-prime: 'craftctl default

      ${CRAFT_PART_SRC}/bin/gpu-2404-cleanup mesa-2404

      '
    prime:
    - bin/gpu-2404-wrapper
  imagedecoder.heif:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/imagedecoder.heif.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - libde265-dev
    - libheif-dev
    stage-packages:
    - libde265-0
    - libheif1
  imagedecoder.mpo:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/imagedecoder.mpo.git
    source-branch: Omega
    source-depth: 1
  imagedecoder.raw:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/imagedecoder.raw.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - libraw-dev
    stage-packages:
    - libraw23t64
    prime:
    - -usr/lib/*/libraw.so*
  inputstream.adaptive:
    after:
    - kodi
    - bento4
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/inputstream.adaptive.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - libpugixml-dev
    stage-packages:
    - libpugixml1v5
    build-environment:
    - INCLUDE: ${CRAFT_STAGE}/usr/include
    - LIB: ${CRAFT_STAGE}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}
  inputstream.ffmpegdirect:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/inputstream.ffmpegdirect.git
    source-branch: Omega
    source-depth: 1
    override-pull: "craftctl default\nfor patch in ${CRAFT_PROJECT_DIR}/patches/${CRAFT_PART_NAME}/*;\
      \ do\n  patch --directory ${CRAFT_PART_SRC} --input \"${patch}\" --strip 1\n\
      done\n"
    build-snaps:
    - ffmpeg-2404-sdk
    build-environment:
    - CMAKE_PREFIX_PATH: ${CRAFT_STAGE}
    - INCLUDE: /snap/ffmpeg-2404-sdk/current/usr/include
    - PKG_CONFIG_PATH: /snap/ffmpeg-2404-sdk/current/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/pkgconfig:${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH}
  inputstream.rtmp:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/inputstream.rtmp.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - librtmp-dev
    stage-packages:
    - librtmp1
  kodi:
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    after:
    - displayinfo
    - embed-libs
    source: https://github.com/xbmc/xbmc.git
    source-tag: 21.1-Omega
    source-depth: 1
    override-pull: "craftctl default\nfor patch in ${CRAFT_PROJECT_DIR}/patches/${CRAFT_PART_NAME}/*;\
      \ do\n  patch --directory ${CRAFT_PART_SRC} --input \"${patch}\" --strip 1\n\
      done\n"
    build-snaps:
    - ffmpeg-2404-sdk
    build-packages:
    - debhelper
    - autoconf
    - automake
    - autopoint
    - gettext
    - autotools-dev
    - cmake
    - curl
    - default-jre
    - gawk
    - gcc
    - gdc
    - gperf
    - libasound2-dev
    - libass-dev
    - libavahi-client-dev
    - libavahi-common-dev
    - libbluetooth-dev
    - libbluray-dev
    - libbz2-dev
    - libcdio-dev
    - libp8-platform-dev
    - libcrossguid-dev
    - libcurl4-openssl-dev
    - libcwiid-dev
    - libdbus-1-dev
    - libdrm-dev
    - libegl1-mesa-dev
    - libenca-dev
    - libflac-dev
    - libfmt-dev
    - libfontconfig-dev
    - libfreetype-dev
    - libfribidi-dev
    - libfstrcmp-dev
    - libgcrypt20-dev
    - libgif-dev
    - libglu1-mesa-dev
    - libgnutls28-dev
    - libgpg-error-dev
    - libgtest-dev
    - libiso9660-dev
    - libjpeg-dev
    - libkissfft-dev
    - liblcms2-dev
    - libltdl-dev
    - liblzo2-dev
    - libmicrohttpd-dev
    - libmysqlclient-dev
    - libnfs-dev
    - libogg-dev
    - libpcre2-dev
    - libplist-dev
    - libpng-dev
    - libpulse-dev
    - libshairplay-dev
    - libsmbclient-dev
    - libspdlog-dev
    - libsqlite3-dev
    - libssl-dev
    - libtag1-dev
    - libtiff5-dev
    - libtinyxml-dev
    - libtinyxml2-dev
    - libtool
    - libudev-dev
    - libunistring-dev
    - libva-dev
    - libvdpau-dev
    - libvorbis-dev
    - libxmu-dev
    - libxrandr-dev
    - libxslt1-dev
    - libxt-dev
    - lsb-release
    - meson
    - nasm
    - ninja-build
    - python3-dev
    - python3-pil
    - python3-pip
    - rapidjson-dev
    - swig
    - unzip
    - uuid-dev
    - zip
    - zlib1g-dev
    - libflatbuffers-dev
    - libglew-dev
    - libwayland-dev
    - libxkbcommon-dev
    - waylandpp-dev
    - wayland-protocols
    - libcap-dev
    - libsndio-dev
    - libgbm-dev
    - libinput-dev
    - libcec-dev
    - libcdio++-dev
    - libdav1d-dev
    - libiso9660++-dev
    - liblirc-dev
    - libmdnsd-dev
    - libpcre3-dev
    - libpipewire-0.3-dev
    - mold
    - ccache
    - cmake
    - gcc
    - ninja-build
    - to amd64:
      - libgl1-mesa-dev
    - to arm64:
      - libgles2-mesa-dev
    - to armhf:
      - libgles2-mesa-dev
    build-environment:
    - CMAKE_PREFIX_PATH: ${CRAFT_STAGE}
    - INCLUDE: /snap/ffmpeg-2404-sdk/current/usr/include
    - PKG_CONFIG_PATH: /snap/ffmpeg-2404-sdk/current/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/pkgconfig:${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH}
    plugin: nil
    override-build: 'cmake ${CRAFT_PART_SRC} -B ${CRAFT_PART_BUILD} -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo
      -DCMAKE_INSTALL_PREFIX=/usr -DCORE_PLATFORM_NAME="x11 wayland gbm" -DAPP_RENDER_SYSTEM="$(
      [[ "${CRAFT_ARCH_BUILD_FOR}" == arm* ]] && echo gl || echo gles )" -DADDONS_CONFIGURE_AT_STARTUP=OFF
      -DVERBOSE=1 \

      -DENABLE_AIRTUNES=ON -DENABLE_ALSA=ON -DENABLE_ATOMIC=ON -DENABLE_AVAHI=ON -DENABLE_AVX2=ON
      -DENABLE_AVX=ON -DENABLE_BLUETOOTH=ON -DENABLE_BLURAY=ON -DENABLE_CAP=ON -DENABLE_CEC=ON
      -DENABLE_DAV1D=ON -DENABLE_DBUS=ON -DENABLE_DEBUGFISSION=ON -DENABLE_DVDCSS=ON
      -DENABLE_EGL=ON -DENABLE_EVENTCLIENTS=ON -DENABLE_GBM=ON -DENABLE_GLX=ON -DENABLE_ISO9660PP=ON
      -DENABLE_LCMS2=ON -DENABLE_LIBDISPLAYINFO=ON -DENABLE_LIBDRM=ON -DENABLE_LIBINPUT=ON
      -DENABLE_LIRCCLIENT=ON -DENABLE_MICROHTTPD=ON -DENABLE_MYSQLCLIENT=ON -DENABLE_NFS=ON
      -DENABLE_OPENGL=ON -DENABLE_OPTICAL=ON -DENABLE_PIPEWIRE=ON -DENABLE_PLIST=ON
      -DENABLE_PULSEAUDIO=ON -DENABLE_PYTHON=ON -DENABLE_SMBCLIENT=ON -DENABLE_SNDIO=ON
      -DENABLE_UDEV=ON -DENABLE_UDFREAD=ON -DENABLE_UPNP=ON -DENABLE_VAAPI=ON -DENABLE_VDPAU=ON
      -DENABLE_WAYLANDPP=ON -DENABLE_WAYLANDPROTOCOLS=ON -DENABLE_X=ON -DENABLE_XKBCOMMON=ON
      -DENABLE_XRANDR=ON -DENABLE_XSLT=ON \

      -DENABLE_CCACHE=ON -DENABLE_GOLD=OFF -DENABLE_LLD=OFF -DENABLE_MOLD=ON \

      -DENABLE_CLANGTIDY=OFF -DENABLE_CPPCHECK=OFF -DENABLE_INCLUDEWHATYOUUSE=OFF
      -DENABLE_TESTING=OFF \

      -DENABLE_INTERNAL_CEC=OFF -DENABLE_INTERNAL_CROSSGUID=OFF -DENABLE_INTERNAL_DAV1D=OFF
      -DENABLE_INTERNAL_FFMPEG=OFF -DENABLE_INTERNAL_FLATBUFFERS=OFF -DENABLE_INTERNAL_FMT=OFF
      -DENABLE_INTERNAL_FSTRCMP=OFF -DENABLE_INTERNAL_GTEST=OFF -DENABLE_INTERNAL_KISSFFT=OFF
      -DENABLE_INTERNAL_NFS=OFF -DENABLE_INTERNAL_PCRE=OFF -DENABLE_INTERNAL_RapidJSON=OFF
      -DENABLE_INTERNAL_SPDLOG=OFF -DENABLE_INTERNAL_TAGLIB=OFF -DENABLE_INTERNAL_UDFREAD=OFF
      \

      -DLIBDVDCSS_URL=${CRAFT_PART_SRC}/../../embed-libs/src/libdvdcss.tar.gz -DLIBDVDCSS_HASH=SHA512=1506c83fb665d9deff8352e3b08d8c691e91c57d89bcdd32bd3187d3dd973563d394754060a48b3e6497cb30e774e94cb8b727ca8cc08287e2d604177072a424
      -DLIBDVDNAV_URL=${CRAFT_PART_SRC}/../../embed-libs/src/libdvdnav.tar.gz -DLIBDVDNAV_HASH=SHA512=51e6fc033121241354a5f0b3fc9a430577ae3ff6bb7f31445aa548ef4893037fb80eea3b2c6774c81e9ebaf9c45e9b490c98c2c65eb38f9f7daba84b236f7e1d
      -DLIBDVDREAD_URL=${CRAFT_PART_SRC}/../../embed-libs/src/libdvdread.tar.gz -DLIBDVDREAD_HASH=SHA512=629a41157d07b8ec0ea1fe89ae5ec48f63047472a862782b805c531ae31a0376fc4dc15175f8280c3ef91d7fa977bacebb1b51232640034a34bab2293210fc5e

      cmake --build ${CRAFT_PART_BUILD} -j${CRAFT_PARALLEL_BUILD_COUNT:-}

      DESTDIR=${CRAFT_PART_INSTALL} cmake --build ${CRAFT_PART_BUILD} --target install'
    stage-packages:
    - to amd64:
      - libvpl2
    - libaom3
    - libasound2t64
    - libasound2-plugins
    - libasyncns0
    - libavahi-client3
    - libavahi-common3
    - libbluetooth3
    - libbs2b0
    - libcairo-gobject2
    - libcairo2
    - libcec6
    - libcodec2-1.2
    - libcrossguid0
    - libdatrie1
    - libdav1d7
    - libegl1
    - libfftw3-double3
    - libflac12t64
    - libflite1
    - libfmt9
    - libfontconfig1
    - libfstrcmp0
    - libgdk-pixbuf-2.0-0
    - libgif7
    - libglvnd0
    - libgme0
    - libgomp1
    - libgraphite2-3
    - libgsm1
    - libgudev-1.0-0
    - libharfbuzz0b
    - libhwy1t64
    - libicu74
    - libinput10
    - libiso9660-11t64
    - libjansson4
    - libjpeg-turbo8
    - libjxl0.7
    - libkissfft-float131
    - liblcms2-2
    - libldap2
    - libldb2
    - liblirc-client0t64
    - libmicrohttpd12t64
    - libmp3lame0
    - libmpg123-0t64
    - libmtdev1t64
    - libmysqlclient21
    - libnfs14
    - libnghttp2-14
    - libnorm1t64
    - libnuma1
    - libogg0
    - libopenjp2-7
    - libopenmpt0t64
    - libopus0
    - libp8-platform2
    - libpango-1.0-0
    - libpangocairo-1.0-0
    - libpangoft2-1.0-0
    - libpcre3
    - libpgm-5.3-0t64
    - libpipewire-0.3-0t64
    - libpipewire-0.3-modules
    - libpixman-1-0
    - libplist-2.0-4
    - libpsl5t64
    - libpulse0
    - libpython3.12t64
    - librav1e0
    - librav1e0
    - librsvg2-2
    - librtmp1
    - librubberband2
    - libsamplerate0
    - libsasl2-2
    - libshairplay0
    - libsharpyuv0
    - libshine3
    - libsmbclient0
    - libsnappy1v5
    - libsndfile1
    - libsodium23
    - libsoxr0
    - libspdlog1.12
    - libspeex1
    - libssh-4
    - libssh-gcrypt-4
    - libsvtav1enc1d1
    - libtag1v5-vanilla
    - libtalloc2
    - libtdb1
    - libtevent0t64
    - libthai0
    - libtinyxml2-10
    - libtinyxml2.6.2v5
    - libtwolame0
    - libunibreak5
    - libvorbis0a
    - libvorbisenc2
    - libvorbisfile3
    - libvpx9
    - libwacom9
    - libcwiid1t64
    - libwayland-client++1
    - libwayland-cursor++1
    - libwayland-cursor0
    - libwayland-egl++1
    - libwbclient0
    - libwebp7
    - libwebpmux3
    - libx11-6
    - libx11-xcb1
    - libx265-199
    - libxau6
    - libxcb-dri3-0
    - libxcb-randr0
    - libxcb-render0
    - libxcb1
    - libxdmcp6
    - libxml2
    - libxrandr2
    - libxrender1
    - libxslt1.1
    - libxvidcore4
    - libzmq5
    - libzvbi0t64
    - ocl-icd-libopencl1
    - pipewire-bin
    - samba-libs
    - xkb-data
    override-stage: 'craftctl default

      craftctl set version=$( git -C ${CRAFT_PART_SRC} describe --tags )

      awk -i inplace -f ${CRAFT_PROJECT_DIR}/snap/local/alsa.conf.awk ${CRAFT_STAGE}/usr/share/alsa/alsa.conf

      sed -i ''s|Icon=.*|Icon=/usr/share/icons/hicolor/scalable/apps/kodi.svg|g''
      ${CRAFT_STAGE}/usr/share/applications/kodi.desktop

      awk -i inplace -f ${CRAFT_PROJECT_DIR}/snap/local/kodi.session.awk ${CRAFT_STAGE}/usr/share/wayland-sessions/kodi-gbm.desktop

      awk -i inplace -f ${CRAFT_PROJECT_DIR}/snap/local/kodi.session.awk ${CRAFT_STAGE}/usr/share/xsessions/kodi.desktop

      '
    prime:
    - -usr/lib/*/libdcerpc-server.so*
    - -usr/lib/*/libdconf.so*
    - -usr/lib/*/libexslt.so*
    - -usr/lib/*/libfftw3_omp.so*
    - -usr/lib/*/libfftw3_threads.so*
    - -usr/lib/*/libflite_cmu_grapheme_lang.so*
    - -usr/lib/*/libflite_cmu_grapheme_lex.so*
    - -usr/lib/*/libflite_cmu_indic_lang.so*
    - -usr/lib/*/libflite_cmu_indic_lex.so*
    - -usr/lib/*/libflite_cmu_time_awb.so*
    - -usr/lib/*/libhwy_contrib.so*
    - -usr/lib/*/libhwy_test.so*
    - -usr/lib/*/libjacknet.so*
    - -usr/lib/*/libjackserver.so*
    - -usr/lib/*/libnetapi.so*
    - -usr/lib/*/libpcreposix.so*
    - -usr/lib/*/libtheora.so*
    - -usr/lib/*/libunwind-coredump.so*
    - -usr/lib/*/libunwind-ptrace.so*
    - -usr/lib/*/libunwind-*.so*
    - -usr/lib/*/libwayland-client-unstable++.so*
    - -usr/lib/*/libzvbi-chains.so*
    organize:
      usr/lib/*/pulseaudio/*: usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/
  mrboom:
    build-packages:
    - curl
    cmake-generator: Unix Makefiles
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    override-pull: '

      craftctl default

      curl -o ${CRAFT_PART_SRC}/CMakeLists.txt https://raw.githubusercontent.com/kodi-game/game.libretro.mrboom/master/depends/common/mrboom/CMakeLists.txt

      '
    plugin: cmake
    source: https://github.com/kodi-game/mrboom-libretro/archive/256caa125cdb94d99eea5a98d6b9bb14f90c34ff.tar.gz
  peripheral.joystick:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/peripheral.joystick.git
    source-branch: Omega
    source-depth: 1
  peripheral.xarcade:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-game/peripheral.xarcade.git
    source-branch: Omega
    source-depth: 1
  projectm:
    build-packages:
    - curl
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    override-pull: '

      craftctl default

      curl -o ${CRAFT_PART_SRC}/CMakeLists.txt https://raw.githubusercontent.com/xbmc/visualization.projectm/Omega/depends/common/projectm/CMakeLists.txt

      '
    plugin: cmake
    source: https://github.com/projectM-visualizer/projectm/releases/download/v3.1.12/projectM-3.1.12.tar.gz
    source-checksum: sha256/b6b99dde5c8f0822ae362606a0429628ee478f4ec943a156723841b742954707
  pvr.argustv:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.argustv.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - libjsoncpp-dev
    stage-packages:
    - libjsoncpp25
  pvr.demo:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.demo.git
    source-branch: Omega
    source-depth: 1
  pvr.dvblink:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.dvblink.git
    source-branch: Omega
    source-depth: 1
  pvr.dvbviewer:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.dvbviewer.git
    source-branch: Omega
    source-depth: 1
  pvr.filmon:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.filmon.git
    source-branch: Omega
    source-depth: 1
  pvr.freebox:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/aassif/pvr.freebox.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - nlohmann-json3-dev
  pvr.hdhomerun:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.hdhomerun.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - libhdhomerun-dev
    stage-packages:
    - libhdhomerun5
  pvr.hts:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.hts.git
    source-branch: Omega
    source-depth: 1
  pvr.iptvsimple:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.iptvsimple.git
    source-branch: Omega
    source-depth: 1
  pvr.mediaportal.tvserver:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.mediaportal.tvserver.git
    source-branch: Omega
    source-depth: 1
  pvr.mythtv:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/janbar/pvr.mythtv.git
    source-branch: Omega
    source-depth: 1
  pvr.nextpvr:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.nextpvr.git
    source-branch: Omega
    source-depth: 1
  pvr.njoy:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.njoy.git
    source-branch: Omega
    source-depth: 1
  pvr.octonet:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/DigitalDevices/pvr.octonet.git
    source-branch: Omega
    source-depth: 1
  pvr.pctv:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.pctv.git
    source-branch: Omega
    source-depth: 1
  pvr.plutotv:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.plutotv.git
    source-branch: Omega
    source-depth: 1
  pvr.sledovanitv.cz:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/palinek/pvr.sledovanitv.cz.git
    source-branch: Omega
    source-depth: 1
  pvr.stalker:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.stalker.git
    source-branch: Omega
    source-depth: 1
  pvr.teleboy:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/rbuehlma/pvr.teleboy.git
    source-branch: Omega
    source-depth: 1
  pvr.vbox:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.vbox.git
    source-branch: Omega
    source-depth: 1
  pvr.vdr.vnsi:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.vdr.vnsi.git
    source-branch: Omega
    source-depth: 1
  pvr.vuplus:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.vuplus.git
    source-branch: Omega
    source-depth: 1
  pvr.waipu:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/flubshi/pvr.waipu.git
    source-branch: Omega
    source-depth: 1
  pvr.wmc:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/kodi-pvr/pvr.wmc.git
    source-branch: Omega
    source-depth: 1
  pvr.zattoo:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/rbuehlma/pvr.zattoo.git
    source-branch: Omega
    source-depth: 1
  rcheevos:
    build-packages:
    - curl
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    override-pull: '

      craftctl default

      curl -o ${CRAFT_PART_SRC}/CMakeLists.txt https://raw.githubusercontent.com/kodi-game/game.libretro/Omega/depends/common/rcheevos/CMakeLists.txt

      '
    plugin: cmake
    source: https://github.com/RetroAchievements/rcheevos/archive/v9.2.0.tar.gz
    source-checksum: sha256/c8ed6ca74f905ea0c256250e46cced579922880001337e7c3d3d68179ad89d4e
    build-environment:
    - CFLAGS: -fPIC
  screensaver.asteroids:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/screensaver.asteroids.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - libglm-dev
  screensaver.asterwave:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/screensaver.asterwave.git
    source-branch: Omega
    source-depth: 1
  screensaver.biogenesis:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/screensaver.biogenesis.git
    source-branch: Omega
    source-depth: 1
  screensaver.cpblobs:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/screensaver.cpblobs.git
    source-branch: Omega
    source-depth: 1
  screensaver.greynetic:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/screensaver.greynetic.git
    source-branch: Omega
    source-depth: 1
  screensaver.matrixtrails:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/screensaver.matrixtrails.git
    source-branch: Omega
    source-depth: 1
  screensaver.pingpong:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/screensaver.pingpong.git
    source-branch: Omega
    source-depth: 1
  screensaver.pyro:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/screensaver.pyro.git
    source-branch: Omega
    source-depth: 1
  screensaver.shadertoy:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/screensaver.shadertoy.git
    source-branch: Omega
    source-depth: 1
  screensaver.stars:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/screensaver.stars.git
    source-branch: Omega
    source-depth: 1
  screensavers.rsxs:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/screensavers.rsxs.git
    source-branch: Omega
    source-depth: 1
  vfs.libarchive:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/vfs.libarchive.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - libarchive-dev
    stage-packages:
    - libarchive13t64
  vfs.rar:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/vfs.rar.git
    source-branch: Omega
    source-depth: 1
  vfs.sftp:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/vfs.sftp.git
    source-branch: Omega
    source-depth: 1
    build-packages:
    - libssh-dev
    stage-packages:
    - libssh-4
  visualization.fishbmc:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/visualization.fishbmc.git
    source-branch: Omega
    source-depth: 1
  visualization.goom:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/visualization.goom.git
    source-branch: Omega
    source-depth: 1
  visualization.matrix:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/visualization.matrix.git
    source-branch: Omega
    source-depth: 1
  visualization.pictureit:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/visualization.pictureit.git
    source-branch: Omega
    source-depth: 1
  visualization.projectm:
    after:
    - kodi
    - projectm
    cmake-generator: Ninja
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=RelWithDebInfo
    - -DCMAKE_INSTALL_PREFIX=/usr
    - -DCMAKE_MODULE_PATH=${CRAFT_STAGE}/usr/share/kodi/cmake
    - -DKODI_INCLUDE_DIR=${CRAFT_STAGE}/usr/include/kodi/
    - -DCORE_SYSTEM_NAME=linux
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/visualization.projectm.git
    source-branch: Omega
    source-depth: 1
  visualization.shadertoy:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/visualization.shadertoy.git
    source-branch: Omega
    source-depth: 1
  visualization.spectrum:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/visualization.spectrum.git
    source-branch: Omega
    source-depth: 1
  visualization.starburst:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/visualization.starburst.git
    source-branch: Omega
    source-depth: 1
  visualization.waveform:
    after:
    - kodi
    cmake-generator: Ninja
    cmake-parameters: *id001
    override-prime: "\nset -euo pipefail\ncraftctl default\n\nDEBUGINFO=\"${CRAFT_COMPONENT_DEBUG_PRIME}/debug/.build-id\"\
      \n\ncd ${CRAFT_PART_INSTALL}\n\nIFS=$'\\n'; for file in $( find . -type f );\
      \ do\n  FILE_TYPE=\"$( file --brief -e apptype -e ascii -e encoding -e cdf -e\
      \ compress -e tar -- \"${file}\" )\"\n  [[ \"${FILE_TYPE}\" == *\"not stripped\"\
      \ ]] || continue\n  if ! [[ \"${FILE_TYPE}\" =~ BuildID\\[[^\\]]+\\]=([0-9a-f]{2})([0-9a-f]+)\
      \ ]]; then\n    ( echo \"WARNING: BuildId not found for ${file}\")\n    continue\n\
      \  fi\n  mkdir --parents \"${DEBUGINFO}/${BASH_REMATCH[1]}\"\n  debug_file=\"\
      ${DEBUGINFO}/${BASH_REMATCH[1]}/${BASH_REMATCH[2]}.debug\"\n  objcopy --only-keep-debug\
      \ --compress-debug-sections \"${CRAFT_PRIME}/${file}\" \"${debug_file}\"\n \
      \ chmod 644 \"${debug_file}\"\n  strip --remove-section=.comment --remove-section=.note\
      \ --strip-unneeded \"${file}\"\ndone\n"
    plugin: cmake
    source: https://github.com/xbmc/visualization.waveform.git
    source-branch: Omega
    source-depth: 1
  displayinfo:
    source: https://gitlab.freedesktop.org/emersion/libdisplay-info.git
    source-tag: 0.2.0
    source-depth: 1
    build-packages:
    - hwdata
    - meson
    plugin: meson
    meson-parameters:
    - --prefix=/usr
  embed-libs:
    plugin: nil
    build-packages:
    - curl
    override-pull: "curl --location --output \\\n  ${CRAFT_PART_SRC}/libdvdcss.tar.gz\
      \ \\\n  https://github.com/xbmc/libdvdcss/archive/1.4.3-Next-Omega-Alpha3.tar.gz\n\
      curl --location --output \\\n  ${CRAFT_PART_SRC}/libdvdnav.tar.gz \\\n  https://github.com/xbmc/libdvdnav/archive/6.1.1-Next-Nexus-Alpha2-2.tar.gz\n\
      curl --location --output \\\n  ${CRAFT_PART_SRC}/libdvdread.tar.gz \\\n  https://github.com/xbmc/libdvdread/archive/6.1.3-Next-Nexus-Alpha2-2.tar.gz\n"
  glue:
    source: glue
    plugin: nil
    stage-packages:
    - inotify-tools
    override-build: 'sed "s/%ARCH_TRIPLET%/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/g" ${CRAFT_PART_SRC}/kodi.wrapper.in
      > ${CRAFT_PART_INSTALL}/kodi.wrapper

      chmod +x ${CRAFT_PART_INSTALL}/kodi.wrapper

      install -m 555 ${CRAFT_PART_SRC}/kodi.daemon ${CRAFT_PART_INSTALL}

      '
  cleanup:
    after:
    - gpu-2404
    build-snaps:
    - core24
    - ffmpeg-2404-sdk
    plugin: nil
    override-prime: "set -eux\nfor snap in core24 ffmpeg-2404-sdk; do\n  cd /snap/${snap}/current\n\
      \  find . -type f,l -exec rm -f ${CRAFT_PRIME}/{} \\;\ndone\nfind ${CRAFT_PRIME}\
      \ -empty -type d -delete\n"
name: kodi
title: Kodi
base: core24
adopt-info: kodi
summary: An award-winning free and open source home theater/media center software
description: "Kodi is an award-winning free and open source software media player\
  \ and\nentertainment hub for digital media. Available as a native application for\n\
  Android, Linux, BSD, macOS, iOS, tvOS and Windows operating systems, Kodi runs\n\
  on most common processor architectures.\n\nCreated in 2003 by a group of like minded\
  \ programmers, Kodi is a non-profit\nproject run by the XBMC Foundation and developed\
  \ by volunteers located around\nthe world. More than 500 software developers have\
  \ contributed to Kodi to date,\nand 100-plus translators have worked to expand its\
  \ reach, making it available\nin more than 70 languages.\n\nWhile Kodi functions\
  \ very well as a standard media player application for your\ncomputer, it has been\
  \ designed to be the perfect companion for your HTPC. With\nits beautiful interface\
  \ and powerful skinning engine, Kodi feels very natural\nto use from the couch with\
  \ a remote control and is the ideal solution for your\nhome theater.\n\n---\n\n\\\
  #\\# Interfaces:\n\nThese give Kodi access to different system resources. You can\
  \ decide, which\naccesses you want to allow.\nSee more on [Snap interfaces documentation](https://snapcraft.io/docs/interfaces).\n\
  \n- `gpu-2404`\n  Provides the userspace GPU drivers, enabling rendering and video\
  \ decoding\n  acceleration. See [The gpu-2404 snap interface](https://mir-server.io/docs/the-gpu-2404-snap-interface)\n\
  \  for more information.\n  This will normally be connected to the [`mesa-2404`](https://snapcraft.io/mesa-2404/)\n\
  \  snap, serving all open source drivers and Nvidia userspace from the host\n  system,\
  \ where possible.\n\n- `ffmpeg-2404`\n  This gives Kodi access to the latest FFmpeg\
  \ for media decoding capabilities.\n  See upstream [ffmpeg-2404](https://snapcraft.io/ffmpeg-2404)\
  \ for more.\n\n- `alsa`\n  `audio-playback`\n  `jack1`\n  Audio playback subsystems.\n\
  \n- `opengl`\n  `wayland`\n  `x11`\n  Graphics hardware and the respective windowing\
  \ systems.\n\n- `joystick`\n  `raw-input`\n  `raw-usb`\n  Input devices, at least\
  \ `raw-input` is required for operation without a\n  display server (using the gbm\
  \ backend).\n\n- `mount-observe`\n  `optical-drive`\n  `removable-media`\n  `udisks2`\n\
  \  External storage.\n\n- `home`\n  The running user's home folder (except for hidden\
  \ folders).\n\n- `avahi-control`\n  Broadcast Kodi services on the local network\
  \ for e.g. remote control.\n\n- `network`\n  `network-bind`\n  Access and expose\
  \ services on the network.\n\n- `shutdown`\n  Power the system down.\n\n- `hardware-observe`\n\
  \  `upower-observe`\n  Enumerate hardware and power properties of the system.\n\n\
  \\#\\# Desktop sessions:\n\nTo use Kodi as your login session, `snap connect kodi:desktop-sessions`.\n\
  \nThis allows you to select Kodi when logging in to your machine. This reduces\n\
  resource usage, as Kodi is the only application running. You need the\n`raw-input`\
  \ interface connected as well and permissions to access\n`/dev/input` devices (usually\
  \ through membership of the `input` group) to\ncontrol it with keyboard and mice.\n\
  \n\\#\\# Configuration options:\n\n- `daemon`\n  One of `{false,gbm,wayland}`, making\
  \ Kodi start up on boot. The `wayland`\n  mode is geared at usage with a Wayland\
  \ compositor running as a daemon\n  as well - for example [Ubuntu Frame](https://snapcraft.io/ubuntu-frame).\n"
icon: snap/gui/kodi.svg
website: https://kodi.tv/
donation:
- https://patreon.com/Teamkodi
- https://liberapay.com/teamkodi
- https://kodi.tv/contribute/donate
source-code:
- https://github.com/Saviq/kodi.snap
- https://github.com/xbmc/xbmc
issues:
- https://github.com/Saviq/kodi.snap/issues
- https://github.com/xbmc/xbmc/issues
contact:
- https://github.com/Saviq/kodi.snap
license: GPL-2.0-or-later
grade: devel
confinement: strict
layout:
  /usr/share/libdrm:
    bind: $SNAP/gpu-2404/libdrm
  /usr/share/drirc.d:
    symlink: $SNAP/gpu-2404/drirc.d
  /usr/share/X11/XErrorDB:
    symlink: $SNAP/gpu-2404/X11/XErrorDB
plugs:
  desktop-session:
    interface: system-files
    write:
    - /var/lib/snapd/hostfs/usr/share/wayland-sessions/snap.kodi.desktop
    - /var/lib/snapd/hostfs/usr/share/xsessions/snap.kodi.desktop
  ffmpeg-2404:
    interface: content
    target: $SNAP/ffmpeg-2404
    default-provider: ffmpeg-2404
  gpu-2404:
    interface: content
    target: $SNAP/gpu-2404
    default-provider: mesa-2404
components:
  debug:
    type: test
    summary: Debugging symbols and tools
    version: 21.1-Omega
    description: 'This component includes the debug symbols stripped from the ELF
      files built

      in this snap. Install it and point gdb at `/snap/kodi/current/debug` to

      get symbolic stack traces.


      For dependency symbols it''s recommended to use debuginfod:

      https://ubuntu.com/server/docs/service-debuginfod

      '
platforms:
  amd64: null
  arm64: null
  armhf: null
environment:
  XKB_CONFIG_ROOT: ${SNAP}/usr/share/X11/xkb
  XDG_CACHE_HOME: ${SNAP_USER_COMMON}/.cache
  XDG_CONFIG_HOME: ${SNAP_USER_DATA}/.config
  XDG_CONFIG_DIRS: ${SNAP}/etc/xdg
  XDG_DATA_DIRS: ${SNAP}/usr/share
  ALSA_CONFIG_DIR: ${SNAP}/usr/share/alsa
  ALSA_PLUGIN_DIR: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/alsa-lib
  PIPEWIRE_CONFIG_DIR: ${SNAP}/usr/share/pipewire
  PIPEWIRE_MODULE_DIR: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/pipewire-0.3
  SPA_PLUGIN_DIR: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/spa-0.2
  KODI_HOME: ${SNAP}/usr/share/kodi
  KODI_BIN_HOME: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/kodi
apps:
  kodi:
    desktop: usr/share/applications/kodi.desktop
    plugs: &id002
    - alsa
    - audio-playback
    - avahi-control
    - ffmpeg-2404
    - gpu-2404
    - hardware-observe
    - home
    - jack1
    - joystick
    - mount-observe
    - network
    - network-bind
    - opengl
    - optical-drive
    - pulseaudio
    - raw-input
    - raw-usb
    - removable-media
    - shutdown
    - udisks2
    - upower-observe
    - wayland
    - x11
    environment:
      PULSE_SERVER: unix:$XDG_RUNTIME_DIR/../pulse/native
      PIPEWIRE_RUNTIME_DIR: $XDG_RUNTIME_DIR/..
    command-chain:
    - bin/gpu-2404-wrapper
    - kodi.wrapper
    command: usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/kodi/kodi.bin
  daemon:
    desktop: usr/share/applications/kodi.desktop
    plugs: *id002
    environment:
      PULSE_SYSTEM: '1'
      PULSE_RUNTIME_PATH: /var/run/pulse
    command-chain:
    - bin/gpu-2404-wrapper
    - kodi.daemon
    - kodi.wrapper
    command: usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/kodi/kodi.bin
    daemon: simple
    restart-condition: always
